{"version":3,"sources":["../node_modules/query-string/index.js","../node_modules/filter-obj/index.js","hooks/useQuery.ts","views/Transaction/TransactionView.style.ts","views/Transaction/TransactionView.tsx","helpers/router.ts","views/Transaction/index.ts"],"names":["strictUriEncode","require","decodeComponent","splitOnFirst","filterObject","validateArrayFormatSeparator","value","length","TypeError","encode","options","strict","encodeURIComponent","decode","keysSorter","input","Array","isArray","sort","Object","keys","a","b","Number","map","key","removeHash","hashStart","indexOf","slice","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","query","assign","arrayFormat","arrayFormatSeparator","formatter","result","accumulator","exec","replace","undefined","concat","includes","isEncodedArray","newValue","split","item","parserForArrayFormat","ret","create","param","k","reduce","Boolean","exports","stringify","object","shouldFilter","skipNull","skipEmptyString","index","join","encoderForArrayFormat","objectCopy","filter","x","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","exclude","exclusionFilter","module","obj","predicate","isArr","i","val","useQuery","useLocation","search","ContentWrapper","styled","ContentView","media","sm","StyledPagination","Pagination","palette","FilterContainer","div","Input","UnstyledInput","TxToolsContainer","Transaction","useMidgard","txData","txDataLoading","getTxData","history","useHistory","type","offset","page","address","txId","asset","isValidFilter","useCallback","initialFilter","useMemo","limit","TX_PUBLIC_PAGE_LIMIT","useState","setFilter","filterInput","setFilterInput","isDesktopView","Grid","useBreakpoint","lg","console","log","useEffect","push","txFilter","newFilter","getTxViewURL","handleResetFilters","handleSelectFilter","handleChangePage","centerAlign","prevRefreshTxStatus","usePrevious","filterCol","width","align","title","render","text","rowData","handleSearchWithFilter","handleChangeFilterInput","e","target","renderFilter","onClick","onFinish","autoComplete","typevalue","sizevalue","onChange","placeholder","desktopColumns","data","moment","unix","date","format","mobileColumns","_","className","renderTxTable","loading","columns","dataSource","rowKey","record","size","pageContent","count","content","color","fixedWidth","current","pageSize","total","showSizeChanger","actions","renderPage","TransactionView"],"mappings":"4JACMA,EAAkBC,EAAQ,KAC1BC,EAAkBD,EAAQ,KAC1BE,EAAeF,EAAQ,KACvBG,EAAeH,EAAQ,MA4I7B,SAASI,EAA6BC,GACrC,GAAqB,kBAAVA,GAAuC,IAAjBA,EAAMC,OACtC,MAAM,IAAIC,UAAU,wDAItB,SAASC,EAAOH,EAAOI,GACtB,OAAIA,EAAQD,OACJC,EAAQC,OAASX,EAAgBM,GAASM,mBAAmBN,GAG9DA,EAGR,SAASO,EAAOP,EAAOI,GACtB,OAAIA,EAAQG,OACJX,EAAgBI,GAGjBA,EAGR,SAASQ,EAAWC,GACnB,OAAIC,MAAMC,QAAQF,GACVA,EAAMG,OAGO,kBAAVH,EACHD,EAAWK,OAAOC,KAAKL,IAC5BG,MAAK,SAACG,EAAGC,GAAJ,OAAUC,OAAOF,GAAKE,OAAOD,MAClCE,KAAI,SAAAC,GAAG,OAAIV,EAAMU,MAGbV,EAGR,SAASW,EAAWX,GACnB,IAAMY,EAAYZ,EAAMa,QAAQ,KAKhC,OAJmB,IAAfD,IACHZ,EAAQA,EAAMc,MAAM,EAAGF,IAGjBZ,EAaR,SAASe,EAAQf,GAEhB,IAAMgB,GADNhB,EAAQW,EAAWX,IACMa,QAAQ,KACjC,OAAoB,IAAhBG,EACI,GAGDhB,EAAMc,MAAME,EAAa,GAGjC,SAASC,EAAW1B,EAAOI,GAO1B,OANIA,EAAQuB,eAAiBV,OAAOW,MAAMX,OAAOjB,KAA6B,kBAAVA,GAAuC,KAAjBA,EAAM6B,OAC/F7B,EAAQiB,OAAOjB,IACLI,EAAQ0B,eAA2B,OAAV9B,GAA2C,SAAxBA,EAAM+B,eAAoD,UAAxB/B,EAAM+B,gBAC9F/B,EAAgC,SAAxBA,EAAM+B,eAGR/B,EAGR,SAASgC,EAAMC,EAAO7B,GAUrBL,GATAK,EAAUS,OAAOqB,OAAO,CACvB3B,QAAQ,EACRK,MAAM,EACNuB,YAAa,OACbC,qBAAsB,IACtBT,cAAc,EACdG,eAAe,GACb1B,IAEkCgC,sBAErC,IAAMC,EArJP,SAA8BjC,GAC7B,IAAIkC,EAEJ,OAAQlC,EAAQ+B,aACf,IAAK,QACJ,OAAO,SAAChB,EAAKnB,EAAOuC,GACnBD,EAAS,aAAaE,KAAKrB,GAE3BA,EAAMA,EAAIsB,QAAQ,WAAY,IAEzBH,QAKoBI,IAArBH,EAAYpB,KACfoB,EAAYpB,GAAO,IAGpBoB,EAAYpB,GAAKmB,EAAO,IAAMtC,GAR7BuC,EAAYpB,GAAOnB,GAWtB,IAAK,UACJ,OAAO,SAACmB,EAAKnB,EAAOuC,GACnBD,EAAS,UAAUE,KAAKrB,GACxBA,EAAMA,EAAIsB,QAAQ,QAAS,IAEtBH,OAKoBI,IAArBH,EAAYpB,GAKhBoB,EAAYpB,GAAO,GAAGwB,OAAOJ,EAAYpB,GAAMnB,GAJ9CuC,EAAYpB,GAAO,CAACnB,GALpBuC,EAAYpB,GAAOnB,GAYtB,IAAK,QACL,IAAK,YACJ,OAAO,SAACmB,EAAKnB,EAAOuC,GACnB,IAAM5B,EAA2B,kBAAVX,GAAsBA,EAAM4C,SAASxC,EAAQgC,sBAC9DS,EAAmC,kBAAV7C,IAAuBW,GAAWJ,EAAOP,EAAOI,GAASwC,SAASxC,EAAQgC,sBACzGpC,EAAQ6C,EAAiBtC,EAAOP,EAAOI,GAAWJ,EAClD,IAAM8C,EAAWnC,GAAWkC,EAAiB7C,EAAM+C,MAAM3C,EAAQgC,sBAAsBlB,KAAI,SAAA8B,GAAI,OAAIzC,EAAOyC,EAAM5C,MAAsB,OAAVJ,EAAiBA,EAAQO,EAAOP,EAAOI,GACnKmC,EAAYpB,GAAO2B,GAGrB,QACC,OAAO,SAAC3B,EAAKnB,EAAOuC,QACMG,IAArBH,EAAYpB,GAKhBoB,EAAYpB,GAAO,GAAGwB,OAAOJ,EAAYpB,GAAMnB,GAJ9CuC,EAAYpB,GAAOnB,IAgGLiD,CAAqB7C,GAGjC8C,EAAMrC,OAAOsC,OAAO,MAE1B,GAAqB,kBAAVlB,EACV,OAAOiB,EAKR,KAFAjB,EAAQA,EAAMJ,OAAOY,QAAQ,SAAU,KAGtC,OAAOS,EAxBsB,UA2BVjB,EAAMc,MAAM,MA3BF,IA2B9B,2BAAsC,KAA3BK,EAA2B,QACrC,GAAc,KAAVA,EAAJ,CADqC,MAKlBvD,EAAaO,EAAQG,OAAS6C,EAAMX,QAAQ,MAAO,KAAOW,EAAO,KAL/C,SAKhCjC,EALgC,KAK3BnB,EAL2B,KASrCA,OAAkB0C,IAAV1C,EAAsB,KAAO,CAAC,QAAS,aAAa4C,SAASxC,EAAQ+B,aAAenC,EAAQO,EAAOP,EAAOI,GAClHiC,EAAU9B,EAAOY,EAAKf,GAAUJ,EAAOkD,KArCV,8BAwC9B,cAAkBrC,OAAOC,KAAKoC,GAA9B,eAAoC,CAA/B,IAAM/B,EAAG,KACPnB,EAAQkD,EAAI/B,GAClB,GAAqB,kBAAVnB,GAAgC,OAAVA,EAChC,cAAgBa,OAAOC,KAAKd,GAA5B,eAAoC,CAA/B,IAAMqD,EAAC,KACXrD,EAAMqD,GAAK3B,EAAW1B,EAAMqD,GAAIjD,QAGjC8C,EAAI/B,GAAOO,EAAW1B,EAAOI,GAI/B,OAAqB,IAAjBA,EAAQQ,KACJsC,IAGiB,IAAjB9C,EAAQQ,KAAgBC,OAAOC,KAAKoC,GAAKtC,OAASC,OAAOC,KAAKoC,GAAKtC,KAAKR,EAAQQ,OAAO0C,QAAO,SAAChB,EAAQnB,GAC9G,IAAMnB,EAAQkD,EAAI/B,GAQlB,OAPIoC,QAAQvD,IAA2B,kBAAVA,IAAuBU,MAAMC,QAAQX,GAEjEsC,EAAOnB,GAAOX,EAAWR,GAEzBsC,EAAOnB,GAAOnB,EAGRsC,IACLzB,OAAOsC,OAAO,OAGlBK,EAAQhC,QAAUA,EAClBgC,EAAQxB,MAAQA,EAEhBwB,EAAQC,UAAY,SAACC,EAAQtD,GAC5B,IAAKsD,EACJ,MAAO,GAUR3D,GAPAK,EAAUS,OAAOqB,OAAO,CACvB/B,QAAQ,EACRE,QAAQ,EACR8B,YAAa,OACbC,qBAAsB,KACpBhC,IAEkCgC,sBAWrC,IATA,IAAMuB,EAAe,SAAAxC,GAAG,OACtBf,EAAQwD,WA3SkC,QAAnB5D,EA2Se0D,EAAOvC,UA3SeuB,IAAV1C,IA4SlDI,EAAQyD,iBAAmC,KAAhBH,EAAOvC,GA5SX,IAAAnB,GA+SnBqC,EA7SP,SAA+BjC,GAC9B,OAAQA,EAAQ+B,aACf,IAAK,QACJ,OAAO,SAAAhB,GAAG,OAAI,SAACmB,EAAQtC,GACtB,IAAM8D,EAAQxB,EAAOrC,OAErB,YACWyC,IAAV1C,GACCI,EAAQwD,UAAsB,OAAV5D,GACpBI,EAAQyD,iBAA6B,KAAV7D,EAErBsC,EAIP,YAAWA,GADE,OAAVtC,EACH,CAAmB,CAACG,EAAOgB,EAAKf,GAAU,IAAK0D,EAAO,KAAKC,KAAK,KAGjE,CAEC,CAAC5D,EAAOgB,EAAKf,GAAU,IAAKD,EAAO2D,EAAO1D,GAAU,KAAMD,EAAOH,EAAOI,IAAU2D,KAAK,QAI1F,IAAK,UACJ,OAAO,SAAA5C,GAAG,OAAI,SAACmB,EAAQtC,GACtB,YACW0C,IAAV1C,GACCI,EAAQwD,UAAsB,OAAV5D,GACpBI,EAAQyD,iBAA6B,KAAV7D,EAErBsC,EAIP,YAAWA,GADE,OAAVtC,EACH,CAAmB,CAACG,EAAOgB,EAAKf,GAAU,MAAM2D,KAAK,KAGtD,CAAmB,CAAC5D,EAAOgB,EAAKf,GAAU,MAAOD,EAAOH,EAAOI,IAAU2D,KAAK,QAGhF,IAAK,QACL,IAAK,YACJ,OAAO,SAAA5C,GAAG,OAAI,SAACmB,EAAQtC,GACtB,OAAc,OAAVA,QAA4B0C,IAAV1C,GAAwC,IAAjBA,EAAMC,OAC3CqC,EAGc,IAAlBA,EAAOrC,OACH,CAAC,CAACE,EAAOgB,EAAKf,GAAU,IAAKD,EAAOH,EAAOI,IAAU2D,KAAK,KAG3D,CAAC,CAACzB,EAAQnC,EAAOH,EAAOI,IAAU2D,KAAK3D,EAAQgC,yBAGxD,QACC,OAAO,SAAAjB,GAAG,OAAI,SAACmB,EAAQtC,GACtB,YACW0C,IAAV1C,GACCI,EAAQwD,UAAsB,OAAV5D,GACpBI,EAAQyD,iBAA6B,KAAV7D,EAErBsC,EAIP,YAAWA,GADE,OAAVtC,EACH,CAAmBG,EAAOgB,EAAKf,IAGhC,CAAmB,CAACD,EAAOgB,EAAKf,GAAU,IAAKD,EAAOH,EAAOI,IAAU2D,KAAK,SAwO7DC,CAAsB5D,GAElC6D,EAAa,GAEnB,MAAkBpD,OAAOC,KAAK4C,GAA9B,eAAuC,CAAlC,IAAMvC,EAAG,KACRwC,EAAaxC,KACjB8C,EAAW9C,GAAOuC,EAAOvC,IAI3B,IAAML,EAAOD,OAAOC,KAAKmD,GAMzB,OAJqB,IAAjB7D,EAAQQ,MACXE,EAAKF,KAAKR,EAAQQ,MAGZE,EAAKI,KAAI,SAAAC,GACf,IAAMnB,EAAQ0D,EAAOvC,GAErB,YAAcuB,IAAV1C,EACI,GAGM,OAAVA,EACIG,EAAOgB,EAAKf,GAGhBM,MAAMC,QAAQX,GACVA,EACLsD,OAAOjB,EAAUlB,GAAM,IACvB4C,KAAK,KAGD5D,EAAOgB,EAAKf,GAAW,IAAMD,EAAOH,EAAOI,MAChD8D,QAAO,SAAAC,GAAC,OAAIA,EAAElE,OAAS,KAAG8D,KAAK,MAGnCP,EAAQY,SAAW,SAACC,EAAKjE,GACxBA,EAAUS,OAAOqB,OAAO,CACvB3B,QAAQ,GACNH,GAHiC,MAKfP,EAAawE,EAAK,KALH,SAK7BC,EAL6B,KAKvBC,EALuB,KAOpC,OAAO1D,OAAOqB,OACb,CACCmC,IAAKC,EAAKvB,MAAM,KAAK,IAAM,GAC3Bd,MAAOD,EAAMR,EAAQ6C,GAAMjE,IAE5BA,GAAWA,EAAQoE,yBAA2BD,EAAO,CAACE,mBAAoBlE,EAAOgE,EAAMnE,IAAY,KAIrGoD,EAAQkB,aAAe,SAAChB,EAAQtD,GAC/BA,EAAUS,OAAOqB,OAAO,CACvB/B,QAAQ,EACRE,QAAQ,GACND,GAEH,IAAMiE,EAAMjD,EAAWsC,EAAOW,KAAKtB,MAAM,KAAK,IAAM,GAC9C4B,EAAenB,EAAQhC,QAAQkC,EAAOW,KACtCO,EAAqBpB,EAAQxB,MAAM2C,EAAc,CAAC/D,MAAM,IAExDqB,EAAQpB,OAAOqB,OAAO0C,EAAoBlB,EAAOzB,OACnD4C,EAAcrB,EAAQC,UAAUxB,EAAO7B,GACvCyE,IACHA,EAAc,IAAH,OAAOA,IAGnB,IAAIN,EA7LL,SAAiBF,GAChB,IAAIE,EAAO,GACLlD,EAAYgD,EAAI/C,QAAQ,KAK9B,OAJmB,IAAfD,IACHkD,EAAOF,EAAI9C,MAAMF,IAGXkD,EAsLIO,CAAQpB,EAAOW,KAK1B,OAJIX,EAAOe,qBACVF,EAAO,IAAH,OAAOpE,EAAOuD,EAAOe,mBAAoBrE,KAG9C,UAAUiE,GAAV,OAAgBQ,GAAhB,OAA8BN,IAG/Bf,EAAQuB,KAAO,SAACtE,EAAOyD,EAAQ9D,GAC9BA,EAAUS,OAAOqB,OAAO,CACvBsC,yBAAyB,GACvBpE,GAHuC,MAKDoD,EAAQY,SAAS3D,EAAOL,GAA1DiE,EALmC,EAKnCA,IAAKpC,EAL8B,EAK9BA,MAAOwC,EALuB,EAKvBA,mBACnB,OAAOjB,EAAQkB,aAAa,CAC3BL,MACApC,MAAOnC,EAAamC,EAAOiC,GAC3BO,sBACErE,IAGJoD,EAAQwB,QAAU,SAACvE,EAAOyD,EAAQ9D,GACjC,IAAM6E,EAAkBvE,MAAMC,QAAQuD,GAAU,SAAA/C,GAAG,OAAK+C,EAAOtB,SAASzB,IAAO,SAACA,EAAKnB,GAAN,OAAiBkE,EAAO/C,EAAKnB,IAE5G,OAAOwD,EAAQuB,KAAKtE,EAAOwE,EAAiB7E,K,kCCjZ7C8E,EAAO1B,QAAU,SAAU2B,EAAKC,GAK/B,IAJA,IAAIlC,EAAM,GACNpC,EAAOD,OAAOC,KAAKqE,GACnBE,EAAQ3E,MAAMC,QAAQyE,GAEjBE,EAAI,EAAGA,EAAIxE,EAAKb,OAAQqF,IAAK,CACrC,IAAInE,EAAML,EAAKwE,GACXC,EAAMJ,EAAIhE,IAEVkE,GAAoC,IAA5BD,EAAU9D,QAAQH,GAAciE,EAAUjE,EAAKoE,EAAKJ,MAC/DjC,EAAI/B,GAAOoE,GAIb,OAAOrC,I,4KCPOsC,EAJE,WACf,OAAOX,IAAY7C,MAAMyD,cAAcC,S,8CCE5BC,EAAiBC,YAAOC,cAAPD,CAAH,qvBAEvBE,IAAMC,GAFiB,kDAQrBD,IAAMC,GARe,uDAgDdC,EAAmBJ,YAAOK,IAAPL,CAAH,omDAaTM,kBAAQ,UAAW,GAExBA,kBAAQ,UAAW,GAKhBA,kBAAQ,aAAc,GACpBA,kBAAQ,OAAQ,GAErBA,kBAAQ,OAAQ,GAITA,kBAAQ,UAAW,GAExBA,kBAAQ,UAAW,GAMlBA,kBAAQ,aAAc,GACpBA,kBAAQ,OAAQ,GACvBA,kBAAQ,OAAQ,GAEPA,kBAAQ,UAAW,GAC1BA,kBAAQ,UAAW,GAOdA,kBAAQ,aAAc,GACpBA,kBAAQ,OAAQ,GACvBA,kBAAQ,OAAQ,GAEPA,kBAAQ,UAAW,GAC1BA,kBAAQ,UAAW,GAMvBA,kBAAQ,UAAW,GAIdA,kBAAQ,aAAc,GAC3BA,kBAAQ,OAAQ,GAEdA,kBAAQ,OAAQ,GAETA,kBAAQ,aAAc,GAC3BA,kBAAQ,UAAW,GAOhBA,kBAAQ,aAAc,GACpBA,kBAAQ,OAAQ,GACvBA,kBAAQ,OAAQ,GAKfA,kBAAQ,OAAQ,GAMRA,kBAAQ,UAAW,GAC1BA,kBAAQ,UAAW,GAIlBA,kBAAQ,UAAW,IAOxBC,EAAkBP,IAAOQ,IAAV,wPAgBfC,EAAQT,YAAOU,QAAPV,CAAH,wJASLW,EAAmBX,IAAOQ,IAAV,iK,OC0IdI,EA1Re,WAAoB,IAAD,MACFC,cAArCC,EADuC,EACvCA,OAAQC,EAD+B,EAC/BA,cAAeC,EADgB,EAChBA,UAEzBC,EAAUC,cACV7E,EAAQuD,IACRuB,EAAI,iBAAI9E,QAAJ,IAAIA,OAAJ,EAAIA,EAAO8E,YAAX,QAAmB,MACvBC,EAAS/F,OAAM,iBAACgB,QAAD,IAACA,OAAD,EAACA,EAAO+E,cAAR,QAAkB,GACjCC,EAAOD,EAAS,EAChBE,EAAO,OAAGjF,QAAH,IAAGA,OAAH,EAAGA,EAAOiF,QACjBC,EAAI,OAAGlF,QAAH,IAAGA,OAAH,EAAGA,EAAOkF,KACdC,EAAK,OAAGnF,QAAH,IAAGA,OAAH,EAAGA,EAAOmF,MAEfC,EAAgBC,uBAAY,SAACpD,GAA0B,IACnD6C,EAA2C7C,EAA3C6C,KADkD,EACP7C,EAArC8C,cAD4C,MACnC,EADmC,EAChCE,EAAyBhD,EAAzBgD,QAASC,EAAgBjD,EAAhBiD,KAAMC,EAAUlD,EAAVkD,MACzC,MACW,KAATL,IACA9F,OAAOW,MAAMoF,IACD,KAAZE,GACS,KAATC,GACU,KAAVC,IAKD,IAEGG,EAA8BC,mBAClC,iBAAO,CACLC,MAAOC,IACPX,KAAOA,GAAQ,MACfC,SACAE,UACAC,OACAC,WAEF,CAACJ,EAAQD,EAAMG,EAASC,EAAMC,IAnCe,EAsCnBO,mBAAuBJ,GAtCJ,mBAsCxCrD,EAtCwC,KAsChC0D,EAtCgC,OAuCTD,mBAAST,GAAWC,GAAQ,IAvCnB,mBAuCxCU,EAvCwC,KAuC3BC,EAvC2B,KAyCzCC,EAAgBC,IAAKC,gBAAgBC,GAC3CC,QAAQC,IAAI,cAAeP,GAE3BQ,qBAAU,WAAO,IACPnB,EAAoCK,EAApCL,QAASC,EAA2BI,EAA3BJ,KAAMJ,EAAqBQ,EAArBR,KADT,EAC8BQ,EAAfP,cADf,MACwB,EADxB,EAGVK,EAAcE,GAChBX,EAAU,2BACLW,GADI,IAEPR,KAAgB,QAATA,OAAiBrE,EAAYqE,EACpCC,YAGFH,EAAQyB,KAAK,OAGfR,EAAeZ,GAAWC,GAAQ,IAClCS,EAAU,2BACLL,GADI,IAEPR,KAAMA,GAAQ,WAEf,CAACH,EAAWW,EAAeF,EAAeR,IAE7CwB,qBAAU,WACRxB,EAAQyB,KCHgB,SAACC,GAA4B,IAC/CrB,EAAiCqB,EAAjCrB,QAASC,EAAwBoB,EAAxBpB,KAAMC,EAAkBmB,EAAlBnB,MAAOJ,EAAWuB,EAAXvB,OAExBwB,EAAS,2BACVD,GADU,IAEbd,WAAO/E,EACPwE,QAASA,QAAWxE,EACpByE,KAAMA,QAAQzE,EACd0E,MAAOA,QAAS1E,EAChBsE,OAAQA,GAAU/F,OAAOW,MAAMoF,QAAUtE,EAAYsE,IAGjD/E,EAAQ4C,IAAYpB,UAAU+E,EAAW,CAAErI,QAAQ,IAEzD,OAAK8B,EAEC,OAAN,OAAcA,GAFK,MDXJwG,CAAavE,MACzB,CAAC2C,EAAS3C,IAEb,IAAMwE,EAAqBpB,uBAAY,WACrCT,EAAQyB,KAAK,SACZ,CAACzB,IAEE8B,EAAqBrB,uBACzB,SAACtH,GACC,IAAMwI,EAAS,2BACVtE,GADU,IAEb6C,KAAiB,QAAV/G,OAAkB0C,EAAY1C,IAEvC4H,EAAUY,KAEZ,CAACtE,IAGG0E,EAAmBtB,uBACvB,SAACtH,GACC,IAAMwI,EAAS,2BACVtE,GADU,IAEb8C,OAAQhH,EAAQ,IAElB4H,EAAUY,KAEZ,CAACtE,IAEG2E,EAAc,SAGdC,EAAsBC,YAAYpC,GACxC0B,qBAAU,YACH1B,GAAiBmC,GACpBhB,EAAe,MAEhB,CAACnB,EAAemC,IAEnB,IAAME,EAAYxB,mBAChB,iBAAO,CACLrG,IAAK,SACL8H,MAAO,IACPC,MAAOL,EACPM,MAAO,OACPC,OAAQ,SAACC,EAAcC,GAAqB,IAClCvC,EAASuC,EAATvC,KAER,OAAO,cAAC,UAAD,CAASA,KAAMA,QAG1B,IAGIwC,EAAyB,WACxB1B,GACHD,EAAU,2BACL1D,GADI,IAEPgD,aAASxE,EACTyE,UAAMzE,KAGVkF,EAAU,2BACL1D,GADI,IAEPiD,KAAMU,MAIJ2B,EAA0BlC,uBAC9B,SAACmC,GACC,IAAMJ,EAAOI,EAAEC,OAAO1J,MAEtB8H,EAAeuB,KAEjB,IAGIM,EAAe,WAAO,IAAD,EACnB5C,EAAI,iBAAG7C,QAAH,IAAGA,OAAH,EAAGA,EAAQ6C,YAAX,QAAmB,MAE7B,OACE,eAACZ,EAAD,WACE,cAAC,WAAD,CAAUnG,MAAO+G,EAAM6C,QAASjB,IAChC,cAAC,IAAD,CAAMkB,SAAUN,EAAwBO,aAAa,MAArD,SACE,cAACzD,EAAD,CACE0D,UAAU,QACVC,UAAU,MACVhK,MAAO6H,EACPoC,SAAUT,EACVM,aAAa,MACbI,YAAY,oCAOhBC,EAAiB3C,mBACrB,iBAAM,CACJwB,EACA,CACE7H,IAAK,UACLgI,MAAO,UACPD,MAAOL,EACPO,OAAQ,SAACC,EAAcC,GACrB,OAAO,cAAC,SAAD,CAAQc,KAAMd,MAGzB,CACEnI,IAAK,OACLgI,MAAO,OACPD,MAAOL,EACPI,MAAO,IACPG,OAAQ,SAACC,EAAcC,GAAqB,IAAD,EACzC,OACE,cAAC,QAAD,CAAOJ,MAAM,SAAb,SACGmB,IACEC,KAAKrJ,OAAM,iBAACqI,QAAD,IAACA,OAAD,EAACA,EAASiB,YAAV,QAAkB,GAAK,KAClCC,OAAO,8BAMpB,CAACxB,IAGGyB,GAAgBjD,mBACpB,iBAAM,CACJ,CACErG,IAAK,UACL+H,MAAOL,EACPM,MAAO,OACPC,OAAQ,SAACsB,EAAWpB,GAAqB,IAAD,EAC9BvC,EAASuC,EAATvC,KAER,OACE,sBAAK4D,UAAU,iBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,UAAD,CAAS5D,KAAMA,MAEjB,qBAAK4D,UAAU,kBAAf,SACE,cAAC,SAAD,CAAQP,KAAMd,MAEhB,qBAAKqB,UAAU,oBAAf,SACE,cAAC,QAAD,UACGN,IACEC,KAAKrJ,OAAM,iBAACqI,QAAD,IAACA,OAAD,EAACA,EAASiB,YAAV,QAAkB,GAAK,KAClCC,OAAO,wBAQxB,IAGII,GAAgB,SAACR,EAAgBS,GACrC,IAAMC,EAAU/C,EAAgBoC,EAAiBM,GAEjD,OACE,cAAC,QAAD,CACEK,QAASA,EACTC,WAAYX,EACZY,OAAQ,SAACC,GAAD,8BAAoBA,QAApB,IAAoBA,OAApB,EAAoBA,EAAQV,YAA5B,QAAoC,GAC5CW,KAAK,QACLL,QAASA,KAKTM,GAAc,SAACf,EAAgBgB,EAAeP,GAClD,OACE,eAAClF,EAAD,WACE,cAAC,SAAD,CAAQwD,MAAM,eAAekC,QAAQ,iBACrC,eAAC1F,EAAD,WACE,cAACY,EAAD,UACE,cAAC,SAAD,CACEyD,UAAU,QACVsB,MAAM,UACNvB,UAAU,UACVH,QAASlB,EACT6C,YAAY,EALd,6BAUD5B,IACAiB,GAAcR,EAAMS,MAEtBO,EACC,cAACpF,EAAD,CACEwF,QAASvE,EACTgD,SAAUrB,EACV6C,SAAU/D,IACVgE,MAAON,EACPO,iBAAiB,IAGnB,OAcR,OARmB,WACjB,GAAIhF,IAAkBD,EACpB,OAAOyE,GAAY,GAAI,GAAG,GAFL,IAIfC,EAAmB1E,EAAnB0E,MAAOQ,EAAYlF,EAAZkF,QACf,OAAOT,GAAYS,EAAS3K,OAAOmK,IAAQ,GAGtCS,IEzTMC","file":"static/js/8.53c75e30.chunk.js","sourcesContent":["'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","import { useLocation } from 'react-router-dom'\n\nimport queryString from 'query-string'\n\nconst useQuery = () => {\n  return queryString.parse(useLocation().search)\n}\n\nexport default useQuery\n","import { Pagination } from 'antd'\nimport { Input as UnstyledInput, ContentView } from 'components'\nimport styled from 'styled-components'\nimport { palette } from 'styled-theme'\n\nimport { media } from 'helpers/style'\n\nexport const ContentWrapper = styled(ContentView)`\n  padding: 10px;\n  ${media.sm`\n    padding: 20px;\n  `}\n\n  &.mobile-view {\n    display: block;\n    ${media.sm`\n      display: none;\n    `}\n\n    .tx-history-row {\n      display: flex;\n      flex-direction: column;\n\n      .tx-history-data {\n        display: flex;\n        justify-content: space-between;\n        font-size: 11px;\n        margin-bottom: 8px;\n      }\n\n      .tx-history-detail {\n        display: flex;\n        align-items: center;\n        p {\n          margin-right: 8px;\n        }\n      }\n    }\n  }\n\n  .tx-detail-button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n  }\n\n  &.center-align {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nexport const StyledPagination = styled(Pagination)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px 0;\n\n  li {\n    a.ant-pagination-item-link {\n      transition: none;\n    }\n  }\n\n  li.ant-pagination-item.ant-pagination-item-active {\n    border-color: ${palette('primary', 0)};\n    a {\n      color: ${palette('primary', 0)};\n    }\n  }\n\n  li.ant-pagination-item {\n    background: ${palette('background', 1)};\n    border-color: ${palette('gray', 0)};\n    a {\n      color: ${palette('text', 0)};\n    }\n\n    &:hover {\n      border-color: ${palette('primary', 0)};\n      a {\n        color: ${palette('primary', 0)};\n      }\n    }\n  }\n\n  .ant-pagination-item-link {\n    background: ${palette('background', 1)};\n    border-color: ${palette('gray', 0)};\n    color: ${palette('text', 0)};\n    &:hover {\n      border-color: ${palette('primary', 0)};\n      color: ${palette('primary', 0)};\n    }\n  }\n\n  li.ant-pagination-prev,\n  li.ant-pagination-next {\n    a {\n      background: ${palette('background', 1)};\n      border-color: ${palette('gray', 0)};\n      color: ${palette('text', 0)};\n      &:hover {\n        border-color: ${palette('primary', 0)};\n        color: ${palette('primary', 0)};\n      }\n    }\n  }\n\n  .anticon.ant-pagination-item-link-icon {\n    color: ${palette('primary', 0)};\n  }\n\n  .ant-select-dropdown {\n    background: ${palette('background', 1)};\n    color: ${palette('text', 0)};\n    .ant-select-item {\n      color: ${palette('text', 0)};\n      &.ant-select-item-option-active {\n        background: ${palette('background', 2)};\n        color: ${palette('primary', 0)};\n      }\n    }\n  }\n\n  .ant-select.ant-pagination-options-size-changer {\n    .ant-select-selector {\n      background: ${palette('background', 1)};\n      border-color: ${palette('gray', 0)};\n      color: ${palette('text', 0)};\n      transition: none;\n    }\n    svg {\n      path {\n        fill: ${palette('text', 0)};\n      }\n    }\n\n    &:hover {\n      .ant-select-selector {\n        border-color: ${palette('primary', 0)};\n        color: ${palette('primary', 0)};\n      }\n      svg {\n        path {\n          fill: ${palette('primary', 0)};\n        }\n      }\n    }\n  }\n`\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 10px;\n\n  .dropdown-wrapper button {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  form {\n    flex: 1;\n  }\n`\n\nexport const Input = styled(UnstyledInput)`\n  &.ant-input {\n    width: 100%;\n    height: 30px;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n`\n\nexport const TxToolsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-bottom: 8px;\n\n  button {\n    margin-right: 8px;\n  }\n`\n","import React, { useState, useEffect, useMemo, useCallback } from 'react'\n\nimport { useHistory } from 'react-router-dom'\n\nimport { Grid, Form } from 'antd'\nimport {\n  Helmet,\n  TxFilter,\n  TxInfo,\n  TxLabel,\n  Button,\n  Table,\n  Label,\n} from 'components'\nimport { ActionType, Action } from 'midgard-sdk'\nimport moment from 'moment'\nimport { AlignType } from 'rc-table/lib/interface'\n\nimport { useMidgard } from 'redux/midgard/hooks'\n\nimport usePrevious from 'hooks/usePrevious'\nimport useQuery from 'hooks/useQuery'\n\nimport { getTxViewURL } from 'helpers/router'\n\nimport { TX_PUBLIC_PAGE_LIMIT } from 'settings/constants'\n\nimport {\n  ContentWrapper,\n  FilterContainer,\n  StyledPagination,\n  Input,\n  TxToolsContainer,\n} from './TransactionView.style'\nimport { TxFilterType } from './types'\n\nconst Transaction: React.FC = (): JSX.Element => {\n  const { txData, txDataLoading, getTxData } = useMidgard()\n\n  const history = useHistory()\n  const query = useQuery()\n  const type = (query?.type ?? 'all') as string\n  const offset = Number(query?.offset ?? 0)\n  const page = offset + 1\n  const address = query?.address as string\n  const txId = query?.txId as string\n  const asset = query?.asset as string\n\n  const isValidFilter = useCallback((filter: TxFilterType) => {\n    const { type, offset = 0, address, txId, asset } = filter\n    if (\n      type === '' ||\n      Number.isNaN(offset) ||\n      address === '' ||\n      txId === '' ||\n      asset === ''\n    ) {\n      return false\n    }\n    return true\n  }, [])\n\n  const initialFilter: TxFilterType = useMemo(\n    () => ({\n      limit: TX_PUBLIC_PAGE_LIMIT,\n      type: (type || 'all') as ActionType,\n      offset,\n      address,\n      txId,\n      asset,\n    }),\n    [offset, type, address, txId, asset],\n  )\n\n  const [filter, setFilter] = useState<TxFilterType>(initialFilter)\n  const [filterInput, setFilterInput] = useState(address || txId || '')\n\n  const isDesktopView = Grid.useBreakpoint().lg\n  console.log('filterInput', filterInput)\n\n  useEffect(() => {\n    const { address, txId, type, offset = 0 } = initialFilter\n\n    if (isValidFilter(initialFilter)) {\n      getTxData({\n        ...initialFilter,\n        type: (type === 'all' ? undefined : type) as ActionType,\n        offset,\n      })\n    } else {\n      history.push('/tx')\n    }\n\n    setFilterInput(address || txId || '')\n    setFilter({\n      ...initialFilter,\n      type: type || 'all',\n    })\n  }, [getTxData, initialFilter, isValidFilter, history])\n\n  useEffect(() => {\n    history.push(getTxViewURL(filter))\n  }, [history, filter])\n\n  const handleResetFilters = useCallback(() => {\n    history.push('/tx')\n  }, [history])\n\n  const handleSelectFilter = useCallback(\n    (value: string) => {\n      const newFilter = {\n        ...filter,\n        type: (value === 'all' ? undefined : value) as ActionType,\n      }\n      setFilter(newFilter)\n    },\n    [filter],\n  )\n\n  const handleChangePage = useCallback(\n    (value: number) => {\n      const newFilter = {\n        ...filter,\n        offset: value - 1,\n      }\n      setFilter(newFilter)\n    },\n    [filter],\n  )\n  const centerAlign = 'center' as AlignType\n\n  // reset filter, page after refresh\n  const prevRefreshTxStatus = usePrevious(txDataLoading)\n  useEffect(() => {\n    if (!txDataLoading && prevRefreshTxStatus) {\n      setFilterInput('')\n    }\n  }, [txDataLoading, prevRefreshTxStatus])\n\n  const filterCol = useMemo(\n    () => ({\n      key: 'filter',\n      width: 200,\n      align: centerAlign,\n      title: 'Type',\n      render: (text: string, rowData: Action) => {\n        const { type } = rowData\n\n        return <TxLabel type={type} />\n      },\n    }),\n    [],\n  )\n\n  const handleSearchWithFilter = () => {\n    if (!filterInput) {\n      setFilter({\n        ...filter,\n        address: undefined,\n        txId: undefined,\n      })\n    }\n    setFilter({\n      ...filter,\n      txId: filterInput,\n    })\n  }\n\n  const handleChangeFilterInput = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const text = e.target.value\n\n      setFilterInput(text)\n    },\n    [],\n  )\n\n  const renderFilter = () => {\n    const type = filter?.type ?? 'all'\n\n    return (\n      <FilterContainer>\n        <TxFilter value={type} onClick={handleSelectFilter} />\n        <Form onFinish={handleSearchWithFilter} autoComplete=\"off\">\n          <Input\n            typevalue=\"ghost\"\n            sizevalue=\"big\"\n            value={filterInput}\n            onChange={handleChangeFilterInput}\n            autoComplete=\"off\"\n            placeholder=\"Search by Address / Tx ID\"\n          />\n        </Form>\n      </FilterContainer>\n    )\n  }\n\n  const desktopColumns = useMemo(\n    () => [\n      filterCol,\n      {\n        key: 'history',\n        title: 'history',\n        align: centerAlign,\n        render: (text: string, rowData: Action) => {\n          return <TxInfo data={rowData} />\n        },\n      },\n      {\n        key: 'date',\n        title: 'date',\n        align: centerAlign,\n        width: 200,\n        render: (text: string, rowData: Action) => {\n          return (\n            <Label align=\"center\">\n              {moment\n                .unix(Number(rowData?.date ?? 0) / 1000000000)\n                .format('YYYY-MM-DD hh:mm:ss')}\n            </Label>\n          )\n        },\n      },\n    ],\n    [filterCol],\n  )\n\n  const mobileColumns = useMemo(\n    () => [\n      {\n        key: 'history',\n        align: centerAlign,\n        title: 'Type',\n        render: (_: string, rowData: Action) => {\n          const { type } = rowData\n\n          return (\n            <div className=\"tx-history-row\">\n              <div className=\"tx-history-data\">\n                <TxLabel type={type} />\n              </div>\n              <div className=\"tx-history-info\">\n                <TxInfo data={rowData} />\n              </div>\n              <div className=\"tx-history-detail\">\n                <Label>\n                  {moment\n                    .unix(Number(rowData?.date ?? 0) / 1000000000)\n                    .format('YY-MM-DD')}\n                </Label>\n              </div>\n            </div>\n          )\n        },\n      },\n    ],\n    [],\n  )\n\n  const renderTxTable = (data: Action[], loading: boolean) => {\n    const columns = isDesktopView ? desktopColumns : mobileColumns\n\n    return (\n      <Table\n        columns={columns}\n        dataSource={data}\n        rowKey={(record: Action) => record?.date ?? 0}\n        size=\"small\"\n        loading={loading}\n      />\n    )\n  }\n\n  const pageContent = (data: Action[], count: number, loading: boolean) => {\n    return (\n      <ContentWrapper>\n        <Helmet title=\"Transactions\" content=\"Transactions\" />\n        <ContentWrapper>\n          <TxToolsContainer>\n            <Button\n              sizevalue=\"small\"\n              color=\"primary\"\n              typevalue=\"outline\"\n              onClick={handleResetFilters}\n              fixedWidth={false}\n            >\n              Reset Filters\n            </Button>\n          </TxToolsContainer>\n          {renderFilter()}\n          {renderTxTable(data, loading)}\n        </ContentWrapper>\n        {count ? (\n          <StyledPagination\n            current={page}\n            onChange={handleChangePage}\n            pageSize={TX_PUBLIC_PAGE_LIMIT}\n            total={count}\n            showSizeChanger={false}\n          />\n        ) : (\n          ''\n        )}\n      </ContentWrapper>\n    )\n  }\n\n  const renderPage = () => {\n    if (txDataLoading || !txData) {\n      return pageContent([], 0, true)\n    }\n    const { count, actions } = txData\n    return pageContent(actions, Number(count), false)\n  }\n\n  return renderPage()\n}\n\nexport default Transaction\n","import { matchPath } from 'react-router-dom'\n\nimport queryString from 'query-string'\n\nimport { Maybe } from 'types/global'\n\nimport { TxFilterType } from '../views/Transaction/types'\n\n/**\n * Helper to check if any page is related to a path\n * */\nexport const isValidPage = (path: string, pagePath: string): boolean => {\n  const match = matchPath(path, {\n    path: pagePath,\n    exact: true,\n    strict: true,\n  })\n  return (match && match.path !== undefined) || false\n}\n\nexport const isHomePage = (path: string): boolean =>\n  isValidPage(path, '/') || isValidPage(path, '/pools')\n\nexport const isPoolDetailPage = (path: string): boolean =>\n  isValidPage(path, '/pool/:symbol')\n\nexport const isSwapPage = (path: string): boolean =>\n  isValidPage(path, '/swap/:symbolpair')\n\nexport const isPoolCreatePage = (path: string): boolean =>\n  isValidPage(path, '/pool/:symbol/new')\n\nexport const isAddLiquidityPage = (path: string): boolean =>\n  isValidPage(path, '/liquidity/:symbol')\n\nexport const isTransactionPage = (path: string): boolean =>\n  isValidPage(path, '/tx')\n\nexport const matchPage = {\n  isHomePage,\n  isPoolDetailPage,\n  isSwapPage,\n  isPoolCreatePage,\n  isAddLiquidityPage,\n  isTransactionPage,\n}\n\n/**\n * Returns the Pair of a Swap page by parsing the path\n * */\nexport const matchSwapDetailPair = (path: string): Maybe<any> => {\n  const match = matchPath<{ symbolpair?: string }>(path, {\n    path: '/swap/:symbolpair',\n    exact: true,\n    strict: true,\n  })\n  const symbolpair = match?.params?.symbolpair ?? null\n  console.log(symbolpair)\n  // return symbolpair ? getSymbolPair(symbolpair) : null\n  return null\n}\n\n/**\n * Returns the symbol param of a Add Liquidity page by parsing the path\n * */\nexport const matchAddLiquiditySymbol = (path: string): Maybe<string> => {\n  const match = matchPath<{ symbol?: string }>(path, {\n    path: '/liquidity/:symbol',\n    exact: true,\n    strict: true,\n  })\n  const symbol = match?.params?.symbol ?? null\n  return symbol\n}\n\nexport const matchPoolDetailSymbol = (path: string): Maybe<string> => {\n  const match = matchPath<{ symbol?: string }>(path, {\n    path: '/pool/:symbol',\n    exact: true,\n    strict: true,\n  })\n  const symbol = match?.params?.symbol ?? null\n  return symbol\n}\n\nexport const matchParam = {\n  matchSwapDetailPair,\n  matchAddLiquiditySymbol,\n  matchPoolDetailSymbol,\n}\n\nexport const getRuneStakeURL = (address?: string) => {\n  if (address) {\n    return `https://app.runestake.info/home?address=${address}`\n  }\n  return 'https://runestake.info'\n}\n\nexport const getTxViewURL = (txFilter: TxFilterType) => {\n  const { address, txId, asset, offset } = txFilter\n\n  const newFilter = {\n    ...txFilter,\n    limit: undefined,\n    address: address || undefined,\n    txId: txId || undefined,\n    asset: asset || undefined,\n    offset: offset && Number.isNaN(offset) ? undefined : offset,\n  }\n\n  const query = queryString.stringify(newFilter, { encode: true })\n\n  if (!query) return '/tx'\n\n  return `/tx?${query}`\n}\n","import TransactionView from './TransactionView'\n\nexport default TransactionView\n"],"sourceRoot":""}